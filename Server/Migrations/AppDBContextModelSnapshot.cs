// <auto-generated />
using System;
using Incidencias.Server.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Incidencias.Server.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Incidencias.Shared.Models.DiaTrabajo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AbiertoPor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DiaDeSemana")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HoraCreado")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HoraFin")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HoraInicio")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DiaTrabajos");
                });

            modelBuilder.Entity("Incidencias.Shared.Models.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("Incidencias.Shared.Models.Ocurrencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DiaTrabajoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HoraCreada")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HoraOcurrencia")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReportadaPor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Resumen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoOcurrencia")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DiaTrabajoId");

                    b.ToTable("Ocurrencias");
                });

            modelBuilder.Entity("Incidencias.Shared.Models.TipoOcurrencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TipoOcurrencias");
                });

            modelBuilder.Entity("Incidencias.Shared.Models.Ocurrencia", b =>
                {
                    b.HasOne("Incidencias.Shared.Models.DiaTrabajo", null)
                        .WithMany("Ocurrencias")
                        .HasForeignKey("DiaTrabajoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Incidencias.Shared.Models.DiaTrabajo", b =>
                {
                    b.Navigation("Ocurrencias");
                });
#pragma warning restore 612, 618
        }
    }
}
